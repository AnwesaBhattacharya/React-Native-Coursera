{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/annbee/confusion-native/components/MainComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Menu from \"./MenuComponent\";\nimport { DISHES } from \"../shared/dishes\";\nimport Dishdetail from \"./DishdetailComponent\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Home from \"./HomeComponent\";\nimport { createDrawerNavigator } from 'react-navigation-drawer';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { Icon } from 'react-native-elements';\nvar HomeNavigator = createStackNavigator({\n  Home: {\n    screen: Home\n  }\n}, {\n  navigationOptions: function navigationOptions(_ref) {\n    var navigation = _ref.navigation;\n    return {\n      headerStyle: {\n        backgroundColor: \"#512DA8\"\n      },\n      headerTitleStyle: {\n        color: \"#fff\"\n      },\n      headerTintColor: \"#fff\"\n    };\n  }\n});\nvar MenuNavigator = createStackNavigator({\n  Menu: {\n    screen: Menu\n  },\n  Dishdetail: {\n    screen: Dishdetail\n  }\n}, {\n  initialRouteName: 'Menu',\n  navigationOptions: {\n    headerStyle: {\n      backgroundColor: \"#512DA8\"\n    },\n    headerTintColor: '#fff',\n    headerTitleStyle: {\n      color: \"#fff\"\n    }\n  }\n});\nvar MainNavigator = createDrawerNavigator({\n  Home: {\n    screen: HomeNavigator,\n    navigationOptions: {\n      title: 'Home',\n      drawerLabel: 'Home'\n    }\n  },\n  Menu: {\n    screen: MenuNavigator,\n    navigationOptions: {\n      title: 'Menu',\n      drawerLabel: 'Menu'\n    }\n  }\n}, {\n  drawerBackgroundColor: '#D1C4E9'\n});\n\nvar Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      dishes: DISHES,\n      selectedDish: null\n    };\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"onDishSelect\",\n    value: function onDishSelect(dishId) {\n      this.setState({\n        selectedDish: dishId\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          paddingTop: Platform.OS === 'ios' ? 0 : Expo.Constants.statusBarHeight\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, React.createElement(MainNavigator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nexport default Main;","map":{"version":3,"sources":["/home/annbee/confusion-native/components/MainComponent.js"],"names":["React","Component","Menu","DISHES","Dishdetail","Home","createDrawerNavigator","createStackNavigator","Icon","HomeNavigator","screen","navigationOptions","navigation","headerStyle","backgroundColor","headerTitleStyle","color","headerTintColor","MenuNavigator","initialRouteName","MainNavigator","title","drawerLabel","drawerBackgroundColor","Main","props","state","dishes","selectedDish","dishId","setState","flex","paddingTop","Platform","OS","Expo","Constants","statusBarHeight"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP;AACA,SAASC,MAAT;AACA,OAAOC,UAAP;;;AAEA,OAAOC,IAAP;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,IAAT,QAAqB,uBAArB;AAEA,IAAMC,aAAa,GAAGF,oBAAoB,CAAC;AACvCF,EAAAA,IAAI,EAAE;AAAEK,IAAAA,MAAM,EAAEL;AAAV;AADiC,CAAD,EAErC;AACDM,EAAAA,iBAAiB,EAAE;AAAA,QAAGC,UAAH,QAAGA,UAAH;AAAA,WAAqB;AACtCC,MAAAA,WAAW,EAAE;AACTC,QAAAA,eAAe,EAAE;AADR,OADyB;AAItCC,MAAAA,gBAAgB,EAAE;AACdC,QAAAA,KAAK,EAAE;AADO,OAJoB;AAOtCC,MAAAA,eAAe,EAAE;AAPqB,KAArB;AAAA;AADlB,CAFqC,CAA1C;AAgBA,IAAMC,aAAa,GAAGX,oBAAoB,CAAC;AACnCL,EAAAA,IAAI,EAAE;AAAEQ,IAAAA,MAAM,EAAER;AAAV,GAD6B;AAEnCE,EAAAA,UAAU,EAAE;AAAEM,IAAAA,MAAM,EAAEN;AAAV;AAFuB,CAAD,EAItC;AACIe,EAAAA,gBAAgB,EAAE,MADtB;AAEIR,EAAAA,iBAAiB,EAAE;AACfE,IAAAA,WAAW,EAAE;AACTC,MAAAA,eAAe,EAAE;AADR,KADE;AAIfG,IAAAA,eAAe,EAAE,MAJF;AAKfF,IAAAA,gBAAgB,EAAE;AACdC,MAAAA,KAAK,EAAE;AADO;AALH;AAFvB,CAJsC,CAA1C;AAkBA,IAAMI,aAAa,GAAGd,qBAAqB,CAAC;AACxCD,EAAAA,IAAI,EACF;AAAEK,IAAAA,MAAM,EAAED,aAAV;AACEE,IAAAA,iBAAiB,EAAE;AACjBU,MAAAA,KAAK,EAAE,MADU;AAEjBC,MAAAA,WAAW,EAAE;AAFI;AADrB,GAFsC;AAQxCpB,EAAAA,IAAI,EACF;AAAEQ,IAAAA,MAAM,EAAEQ,aAAV;AACEP,IAAAA,iBAAiB,EAAE;AACjBU,MAAAA,KAAK,EAAE,MADU;AAEjBC,MAAAA,WAAW,EAAE;AAFI;AADrB;AATsC,CAAD,EAexC;AACDC,EAAAA,qBAAqB,EAAE;AADtB,CAfwC,CAA3C;;IAqBMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAExB,MADG;AAEXyB,MAAAA,YAAY,EAAE;AAFH,KAAb;AAFiB;AAMlB;;;;iCAEYC,M,EAAQ;AACjB,WAAKC,QAAL,CAAc;AAACF,QAAAA,YAAY,EAAEC;AAAf,OAAd;AACH;;;6BAEQ;AAEP,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACE,UAAAA,IAAI,EAAC,CAAN;AAASC,UAAAA,UAAU,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,CAAxB,GAA4BC,IAAI,CAACC,SAAL,CAAeC;AAAhE,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKD;;;;EApBgBpC,S;;AAuBnB,eAAeuB,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport Menu from './MenuComponent';\nimport { DISHES } from '../shared/dishes';\nimport Dishdetail from './DishdetailComponent';\nimport { View, Platform } from 'react-native';\nimport Home from './HomeComponent';\nimport { createDrawerNavigator } from 'react-navigation-drawer';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { Icon } from 'react-native-elements';\n\nconst HomeNavigator = createStackNavigator({\n    Home: { screen: Home }\n  }, {\n    navigationOptions: ({ navigation }) => ({\n      headerStyle: {\n          backgroundColor: \"#512DA8\"\n      },\n      headerTitleStyle: {\n          color: \"#fff\"            \n      },\n      headerTintColor: \"#fff\"  \n    })\n});\n\n\n\nconst MenuNavigator = createStackNavigator({\n        Menu: { screen: Menu },\n        Dishdetail: { screen: Dishdetail }\n    },\n    {\n        initialRouteName: 'Menu',\n        navigationOptions: {\n            headerStyle: {\n                backgroundColor: \"#512DA8\"\n            },\n            headerTintColor: '#fff',\n            headerTitleStyle: {\n                color: \"#fff\"            \n            }\n        }\n    }\n);\n\nconst MainNavigator = createDrawerNavigator({\n    Home: \n      { screen: HomeNavigator,\n        navigationOptions: {\n          title: 'Home',\n          drawerLabel: 'Home'\n        }\n      },\n    Menu: \n      { screen: MenuNavigator,\n        navigationOptions: {\n          title: 'Menu',\n          drawerLabel: 'Menu'\n        }, \n      }\n}, {\n  drawerBackgroundColor: '#D1C4E9'\n});\n\n\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dishes: DISHES,\n      selectedDish: null\n    };\n  }\n\n  onDishSelect(dishId) {\n      this.setState({selectedDish: dishId})\n  }\n\n  render() {\n \n    return (\n        <View style={{flex:1, paddingTop: Platform.OS === 'ios' ? 0 : Expo.Constants.statusBarHeight }}>\n            <MainNavigator />\n        </View>\n    );\n  }\n}\n  \nexport default Main;"]},"metadata":{},"sourceType":"module"}